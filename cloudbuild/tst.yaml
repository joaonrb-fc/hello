steps:
  - id: Build the image
    name: gcr.io/cloud-builders/docker
    args:
      - build
      - -t=$_GCR_HOSTNAME/$PROJECT_ID/sandbox/hello:$SHORT_SHA
      - .

  - id: Push the image to Artifact Registry
    name: gcr.io/cloud-builders/docker
    args:
      - push
      - $_GCR_HOSTNAME/$PROJECT_ID/sandbox/hello:$SHORT_SHA

  - id: Generate service configuration file
    name: gcr.io/cloud-builders/docker
    entrypoint: sh
    args:
      - -c
      - | 
        mkdir resources
        echo "apiVersion: serving.knative.dev/v1" > resources/hello-world.yaml
        echo "  kind: Service" >> resources/hello-world.yaml
        echo "  metadata:" >> resources/hello-world.yaml
        echo "    name: hello-world" >> resources/hello-world.yaml
        echo "  spec:" >> resources/hello-world.yaml
        echo "    template:" >> resources/hello-world.yaml
        echo "      spec:" >> resources/hello-world.yaml
        echo "        containers:" >> resources/hello-world.yaml
        echo "          - image: $_GCR_HOSTNAME/$PROJECT_ID/sandbox/hello:$SHORT_SHA" >> resources/hello-world.yaml

  - id: Create a new release to the test environment
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
    entrypoint: gcloud
    args:
      - deploy
      - releases
      - create
      - hello-release-$SHORT_SHA
      - --delivery-pipeline=hello-world
      - --region=europe-west1
      - --to-target=hello-world-tst

images:
  - $_GCR_HOSTNAME/$PROJECT_ID/sandbox/hello:$SHORT_SHA

options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
  logStreamingOption: STREAM_ON

artifacts:
  objects:
    location: gs://joaonrb-e5-cloud-deploy-terraform/artifacts
    paths:
      - resources/*